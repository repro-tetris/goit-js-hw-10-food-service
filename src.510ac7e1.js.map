{"version":3,"sources":["js/theme/theme.js","index.js"],"names":["Theme","LIGHT","DARK","PARAM_NAME","switchEl","bodyEl","isLightTheme","getCurrentTheme","setCurrentTheme","theme","registerThemeSwitcher","checkboxId","document","querySelector","addEventListener","switchElChecked","restoreTheme","e","changeTheme","saveCurrentTheme","newTheme","classForRemove","console","log","classList","remove","add","localStorage","setItem","curTheme","getItem","checked"],"mappings":";;;AAgDC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,sBAAA,EAhDD,MAAMA,EAAQ,CACZC,MAAO,cACPC,KAAM,aACNC,WAAY,SAGd,IAAIC,EACAC,EACAC,GAAe,EAEnB,MAAMC,EAAkB,IAAOD,EAAeN,EAAMC,MAAQD,EAAME,KAE5DM,EAAkBC,GAAUH,EAAeG,IAAUT,EAAMC,MAE1D,SAASS,EAAsBC,IACpCP,EAAWQ,SAASC,cAAcF,IACzBG,iBAAiB,QAASC,GACnCV,EAASO,SAASC,cAAc,QAEhCG,IAGF,SAASD,EAAgBE,GACvBX,GAAgBA,EAChBY,EAAYX,KACZY,IAGF,SAASD,EAAYE,GACbC,MAAAA,EAAiBD,IAAapB,EAAMC,MAAQD,EAAME,KAAOF,EAAMC,MACrEqB,QAAQC,IAAIF,GACZhB,EAAOmB,UAAUC,OAAOJ,GACxBhB,EAAOmB,UAAUE,IAAIN,GAGvB,SAASD,IACPQ,aAAaC,QAAQ5B,EAAMG,WAAYI,KAGzC,SAASS,IACDa,MAAAA,EAAWF,aAAaG,QAAQ9B,EAAMG,YAExC0B,IACFX,EAAYW,GACZrB,EAAgBqB,GAEhBzB,EAAS2B,SAAWzB;;AC1CxB,aAJA,QAAA,sBAEA,IAAA,EAAA,QAAA,qBAEA,EAAsB,EAAA,uBAAA","file":"src.510ac7e1.js","sourceRoot":"../src","sourcesContent":["const Theme = {\n  LIGHT: 'light-theme',\n  DARK: 'dark-theme',\n  PARAM_NAME: 'theme',\n};\n\nlet switchEl;\nlet bodyEl;\nlet isLightTheme = true;\n\nconst getCurrentTheme = () => (isLightTheme ? Theme.LIGHT : Theme.DARK);\n\nconst setCurrentTheme = theme => (isLightTheme = theme === Theme.LIGHT);\n\nexport function registerThemeSwitcher(checkboxId) {\n  switchEl = document.querySelector(checkboxId);\n  switchEl.addEventListener('input', switchElChecked);\n  bodyEl = document.querySelector('body');\n\n  restoreTheme();\n}\n\nfunction switchElChecked(e) {\n  isLightTheme = !isLightTheme;\n  changeTheme(getCurrentTheme());\n  saveCurrentTheme();\n}\n\nfunction changeTheme(newTheme) {\n  const classForRemove = newTheme === Theme.LIGHT ? Theme.DARK : Theme.LIGHT;\n  console.log(classForRemove);\n  bodyEl.classList.remove(classForRemove);\n  bodyEl.classList.add(newTheme);\n}\n\nfunction saveCurrentTheme() {\n  localStorage.setItem(Theme.PARAM_NAME, getCurrentTheme());\n}\n\nfunction restoreTheme() {\n  const curTheme = localStorage.getItem(Theme.PARAM_NAME);\n\n  if (curTheme) {\n    changeTheme(curTheme);\n    setCurrentTheme(curTheme);\n\n    switchEl.checked = !isLightTheme;\n  }\n}\n","import './sass/styles.scss';\n\nimport { registerThemeSwitcher } from './js/theme/theme';\n\nregisterThemeSwitcher('#theme-switch-toggle');\n"]}